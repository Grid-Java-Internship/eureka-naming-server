steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t',
      '${_IMAGE_REPO_PATH}/${_IMAGE_NAME}:$COMMIT_SHA',
      '.'
    ]
    id: 'Build Image'

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_IMAGE_REPO_PATH}/${_IMAGE_NAME}:$COMMIT_SHA'
    ]
    id: 'Push Image'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - container
      - clusters
      - get-credentials
      - '${_GKE_CLUSTER_NAME}'
      - '--region=${_GKE_REGION}'
      - '--project=${PROJECT_ID}'
    id: 'Get GKE Credentials'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: kubectl
    args:
      - apply
      - -f
      - 'k8s/'
      - '--namespace=${_K8S_NAMESPACE}'
    id: 'Apply Manifests'
    waitFor: [ 'Get GKE Credentials' ]

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: kubectl
    args:
      - set
      - image
      - deployment/${_K8S_DEPLOYMENT_NAME}
      - ${_K8S_CONTAINER_NAME}=${_IMAGE_REPO_PATH}/${_IMAGE_NAME}:$COMMIT_SHA
      - '--namespace=${_K8S_NAMESPACE}'
      - '--record'
    id: 'Set Image'
    waitFor: [ 'Apply Manifests' ]

logsBucket: 'gs://${_STORAGE_BUCKET}'

substitutions:
  _IMAGE_REPO_PATH: europe-west3-docker.pkg.dev/gd-gcp-internship-dc/hah-registry
  _IMAGE_NAME: eureka-naming-server

  _GKE_CLUSTER_NAME: hah-cluster
  _GKE_REGION: europe-west3

  _K8S_DEPLOYMENT_NAME: eureka-naming-server-deployment
  _K8S_CONTAINER_NAME: eureka-naming-server-container
  _K8S_NAMESPACE: hire-a-handyman

  _STORAGE_BUCKET: hah-storage-bucket

images:
  - '${_IMAGE_REPO_PATH}/${_IMAGE_NAME}:$COMMIT_SHA'

timeout: '1200s'